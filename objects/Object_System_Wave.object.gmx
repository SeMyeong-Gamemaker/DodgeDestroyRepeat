<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>System_Wave = 0;
System_Wave_Delay = false;
System_Wave_Time = 1200;

System_Wave_Projectile = 0;
System_Wave_Projectile_Delay = false;
System_Wave_Projectile_Delay_Time = 61;
System_Wave_Projectile_Multi = 1;
System_Wave_Projectile_Burst = 1;
System_Wave_Projectile_Spawned = 0;
System_Wave_Projectile_Destroyed = 0;

System_Wave_Stage = 0;
//0 = High Orbit
//1 = Low Orbit
//2 = Moon
//3 = Star
//4 = Space Debris
System_Wave_Stage_Circle = 0;
System_Wave_Stage_Circle_X = 0;
System_Wave_Stage_Circle_Y = 0;
System_Wave_Stage_Gravity = 0;
System_Wave_Stage_Gravity_Direction = 0;
System_Wave_Stage_Projectile_Chance = 100;
System_Wave_Stage_Projectile_1 = 0;
System_Wave_Stage_Projectile_1_Chance = 0;
System_Wave_Stage_Projectile_2 = 0;
System_Wave_Stage_Projectile_2_Chance = 0;
System_Wave_Stage_Projectile_3 = 0;
System_Wave_Stage_Projectile_3_Chance = 0;

alarm[0] = System_Wave_Time;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if System_Wave &lt;= 5
{
   System_Wave_Stage_Projectile_1 = Object_Projectile_Missile_Small;
   System_Wave_Stage_Projectile_1_Chance = 100;
}
if System_Wave &gt; 5 and System_Wave &lt;= 10
{
   System_Wave_Stage_Projectile_1_Chance -= 10;
   System_Wave_Stage_Projectile_2_Chance += 10;
   System_Wave_Stage_Projectile_1 = Object_Projectile_Missile_Small;
   System_Wave_Stage_Projectile_2 = Object_Projectile_Missile_Medium;
}
if System_Wave &gt; 10 and System_Wave &lt;= 15
{
   System_Wave_Stage_Projectile_1_Chance -= 5;
   System_Wave_Stage_Projectile_2_Chance -= 5;
   System_Wave_Stage_Projectile_3_Chance += 10;
   System_Wave_Stage_Projectile_1 = Object_Projectile_Missile_Small;
   System_Wave_Stage_Projectile_2 = Object_Projectile_Missile_Medium;
   System_Wave_Stage_Projectile_2 = Object_Projectile_Missile_Medium;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if System_Wave_Stage = 0
{
   System_Wave_Stage_Gravity = 0;
   System_Wave_Stage_Gravity_Direction = 0;
}
if System_Wave_Stage = 1
{
   System_Wave_Stage_Gravity = random_range( 0.1, 0.3 );
   System_Wave_Stage_Gravity_Direction = random( 360 );
}
if System_Wave_Stage = 2
{
   System_Wave_Stage_Gravity = random_range( 0.1, 0.3 );
   System_Wave_Stage_Gravity_Direction = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>System_Wave += 1;
System_Wave_Projectile_Spawned = 0;
System_Wave_Projectile_Destroyed = 0;

if System_Wave_Projectile_Delay_Time = 61 { System_Wave_Projectile_Delay_Time -= 1; }
if System_Wave_Projectile_Delay_Time &gt;= 6 and System_Wave_Projectile_Delay_Time &gt; 61 { System_Wave_Projectile_Delay_Time -= floor( System_Wave_Projectile_Burst ); }
if System_Wave_Projectile_Delay_Time &lt; 6
{ 
   System_Wave_Projectile_Burst += 1;
   System_Wave_Projectile_Delay_Time = 60;
}

if System_Wave &lt;= 10 { System_Wave_Projectile += 10; }
if System_Wave &gt; 10
{ 
   System_Wave_Projectile += 1;
   System_Wave_Projectile_Multi += 0.01;
   System_Wave_Projectile = floor( System_Wave_Projectile * System_Wave_Projectile_Multi );
}

if System_Wave &lt;= 5 { System_Wave_Stage = irandom( 0 ); }
if System_Wave &gt; 5 and System_Wave &lt;= 10 { System_Wave_Stage = irandom( 1 ); }
if System_Wave &gt; 10 and System_Wave &lt;= 15 { System_Wave_Stage = irandom( 2 ); }
if System_Wave &gt; 15 and System_Wave &lt;= 20 { System_Wave_Stage = irandom( 3 ); }
if System_Wave &gt; 20 { System_Wave_Stage = irandom( 4 ); }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Object_System_Colour.System_Colour_Hue_Temp = irandom_range( 0, 255 );
Object_System_Colour.System_Colour_Saturation_Temp = irandom_range( 50, 155 );
Object_System_Colour.System_Colour_Value_Temp = irandom_range( 50, 255 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>System_Wave_Projectile_Delay = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>System_Wave_Delay = false;
System_Wave_Projectile_Delay = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if System_Wave_Delay = false
{
   if System_Wave_Projectile_Destroyed &gt;= System_Wave_Projectile
   {
      Object_System_Colour.System_Colour_Hue_Temp = irandom_range( 0, 255 );
      Object_System_Colour.System_Colour_Saturation_Temp = irandom_range( 50, 155 );
      Object_System_Colour.System_Colour_Value_Temp = irandom_range( 50, 255 );
      alarm[0] = System_Wave_Time;
      alarm[2] = 0;
      alarm[3] = System_Wave_Time / 2;
      alarm[4] = System_Wave_Time / 8 * 5;
      alarm[5] = System_Wave_Time / 8 * 6;
      System_Wave_Delay = true;
   }
}

if System_Wave_Delay = false
{
   if System_Wave_Projectile_Delay = false
   {
      repeat( System_Wave_Projectile_Burst )
      {
         if System_Wave_Projectile_Spawned &lt; System_Wave_Projectile
         {
            System_Wave_Stage_Projectile_Chance = irandom( 100 );
            if System_Wave_Stage_Projectile_Chance &gt; 0 and System_Wave_Stage_Projectile_Chance &lt;= System_Wave_Stage_Projectile_1_Chance
            {
               instance_create( irandom( room_width ), choose( 0, room_height ), Object_Projectile_Missile_Small );
               System_Wave_Projectile_Spawned += 1;
               System_Wave_Projectile_Delay = true;
               alarm[1] = System_Wave_Projectile_Delay_Time;
            }
            if System_Wave_Stage_Projectile_Chance &gt; 0 and System_Wave_Stage_Projectile_Chance &lt;= System_Wave_Stage_Projectile_2_Chance
            {
               instance_create( irandom( room_width ), choose( 0, room_height ), Object_Projectile_Missile_Medium );
               System_Wave_Projectile_Spawned += 1;
               System_Wave_Projectile_Delay = true;
               alarm[1] = System_Wave_Projectile_Delay_Time;
            }
         }
      }
   }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
