<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Sprite_Projectile_Missile_Small</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Projectile_Speed = Object_Player.Player_Weapon_2_Speed_Add;
image_angle = direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Projectile_Target_Set = false
{
   if instance_number( Object_Projectile_Parent ) &gt; 0
   {
      if distance_to_object( instance_nearest( x, y, Object_Projectile_Parent ) ) &lt;= 500
      {
         Projectile_Target_Set = true;
         Projectile_Target = instance_nearest( x, y, Object_Projectile_Parent )
      }
   }
}
if Projectile_Speed &gt; Object_Player.Player_Weapon_2_Speed { Projectile_Speed = Object_Player.Player_Weapon_2_Speed; }
if Projectile_Speed &lt; Object_Player.Player_Weapon_2_Speed { Projectile_Speed += Object_Player.Player_Weapon_2_Speed_Add; }
if instance_number( Object_Projectile_Parent ) &gt; 0 and instance_exists( Projectile_Target ) and Projectile_Target != 0 and Projectile_Target_Set != false { mp_potential_step( Projectile_Target.x, Projectile_Target.y, Projectile_Speed, false ); }
if instance_number( Object_Projectile_Parent ) = 0 or not instance_exists( Projectile_Target ) or Projectile_Target = 0 or Projectile_Target_Set = false { motion_set( image_angle, Projectile_Speed ); }
if not instance_exists( Projectile_Target ) { Projectile_Target_Set = false };
image_angle = direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext( sprite_index, -1, x, y, 1, 1, image_angle, Object_System_Colour.System_Colour_Object, 1 );
draw_circle_colour( view_xview + view_wview - 100 + ( ( x / room_width ) * 100 ), view_yview + ( ( y / room_height ) * 100 ), 2, Object_System_Colour.System_Colour, Object_System_Colour.System_Colour, false );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
